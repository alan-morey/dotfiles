" -----------------------------------------------------------
" Vim Config
" Alan Morey <morey.alan@gmail.com>
" -----------------------------------------------------------
" Turn off vi compatibility
set nocompatible

" Set color scheme
colorscheme koehler


" -----------------------------------------------------------
" Searching
" -----------------------------------------------------------
" Highlight search
set hlsearch

" Show match for partly typed search
set incsearch

" Ignore case when searching
set ignorecase

" Override ignorecase when search has uppercase characters
set smartcase


" -----------------------------------------------------------
" Displaying Text
" -----------------------------------------------------------
" Wrap long lines
set nowrap

" Wrap on words
set linebreak

" Jump 5 lins when out of the screen
set scrolljump=5

" Indicate jump out of the screen when 3 lines before end of screen
set scrolloff=3

if has("gui_running")
  " Show line number for each line if GUI
  set number
 
  " Always show tabline if GUI
  set showtabline=2

  " Set font Courier New, Bold, Size 11
  "set guifont=Courier_New:h11:b:cANSI
   set guifont=Menlo\ Regular:h14
endif

" -----------------------------------------------------------
" Syntax and Highlighting
" -----------------------------------------------------------
" Enable highlighting if color terminal or GUI
if &t_Co > 2 || has("gui_running")
  syntax on
endif

" -----------------------------------------------------------
" Status line
" -----------------------------------------------------------
" Show cursor position in status line
set ruler

" Always display status line
set laststatus=2

" Status line format
set statusline=%<%f\ (%n)%(\ [%W%H%M%R%Y]%)%=%([%b,0x%B]%)\ %-14.(%l,%c%V%)\ %P

" Show mode in status line
set showmode

" Set StatusLine and StatusLineNC colors if color terminal or GUI
if &t_Co > 2 || has("gui_running")
  hi clear StatusLine
  hi StatusLine term=bold,reverse cterm=bold guifg=White guibg=DarkBlue
  hi clear StatusLineNC
  hi StatusLineNC term=reverse cterm=reverse guifg=White guibg=DarkGray
endif

" -----------------------------------------------------------
" Command line
" -----------------------------------------------------------
" Command line completion shows a list of matches
set wildmenu


" -----------------------------------------------------------
" Editing Text
" -----------------------------------------------------------
" Backspace can delete anything, including \n, in insert mode
set backspace=indent,eol,start

" When inserting a bracket, brefly jump to its match
set showmatch

" -----------------------------------------------------------
" Folding
" -----------------------------------------------------------
" Enable folding
set foldenable

" Folding type
set foldmethod=marker

" Fold Column
set foldcolumn=2

" Set Folded and Fold Column colors if color terminal or GUI
if &t_Co > 2 || has("gui_running")
  hi clear Folded
  hi Folded term=standout ctermfg=2 ctermbg=0 guifg=Green guibg=Black
  hi clear FoldColumn
  hi FoldColumn term=standout ctermfg=2 ctermbg=0 guifg=Green guibg=Black
endif


" -----------------------------------------------------------
" Win32
" -----------------------------------------------------------
if has("win32")
  source $VIMRUNTIME/mswin.vim
  behave mswin
endif

" -----------------------------------------------------------
" Mappings
" -----------------------------------------------------------
" Tab navigation like firefox
nmap <C-t> :tabnew<cr>
imap <C-t> <ESC>:tabnew<cr>

map <C-S-tab> :tabprevious<cr>
imap <C-S-tab> <ESC>:tabprevious<cr>i
nmap <C-S-tab> :tabprevious<cr>

map <C-tab> :tabnext<cr>
imap <C-tab> <ESC>:tabnext<cr>i
nmap <C-tab> :tabnext<cr>


" -----------------------------------------------------------
" Filtypes
" -----------------------------------------------------------
" Treat following file types as php
autocmd BufRead,BufNewFile *.tpl set filetype=php
autocmd BufRead,BufNewFile *.html set filetype=php
autocmd BufRead,BufNewFile *.inc set filetype=php
autocmd BufRead,BufNewFile *.phpw set filetype=php

autocmd BufRead,BufNewFile *.asm68k set filetype=asm68k

" Treat all files as unix(\n)
set fileformat=unix

filetype on
"if v:version >= 600
"  filetype indent on
"endif

" Necessary for multiple encodings
set encoding=utf-8

" .NFO specific
au BufReadPre *.nfo call SetFileEncodings('cp437')
au BufReadPost *.nfo call RestoreFileEncodings() 


autocmd FileType phtml set filetype=php
autocmd FileType php call MyPHPSetup()
autocmd FileType c call MyCSetup()
autocmd FileType cpp call MyCppSetup()
autocmd FileType java call MyCommonSetup()
autocmd FileType javascript call MyCommonSetup()
autocmd Filetype asm68k call My68kAsmSetup

" Always change the current directory to that of file
" currently being edited
function CHANGE_CURR_DIR()
  let _dir = expand("%:p:h")
  exec "cd " . _dir
  unlet _dir
endfunction 

autocmd BufEnter * call CHANGE_CURR_DIR()

if has("gui_running")
  " Open all starting argument in there own tabs
  "BufAdd,BufNewFile,BufRead * nested tab sball 
  "autocmd VimEnter * tab all

  " Open any newly edited file in a new tab at the end of the tab list
  "autocmd BufAdd * exe 'tablast | tabe "' . expand( "<afile") .'"'
endif

" {{{ MyPHPSetup()
function MyPHPSetup()
  call MyCommonSetup()
  abbr <? <?php
  set dictionary-=\php\phpFunctionList.txt dictionary+=\php\phpFunctionList.txt
  set complete-=k complete+=k
  compiler php

  map <C-B> :w<CR>:make<CR>
  map <F9> :w<CR>:!php %<CR>

  
endfunction
" }}}
" {{{ MyCSetup()
function MyCSetup()
  call MyCommonSetup()
"  compiler gcc
"  set makeprg=gcc\ -Wall\ -o\ %<\ %
endfunction
" }}}
" {{{ MyCppSetup()
function MyCppSetup()
  call MyCSetup()
 "set makeprg=g++\ -Wall\ -o\ %<\ %
endfunction
" }}}
" {{{ MyCommonSetup()
function MyCommonSetup()
  set nowrap
  set autoindent
  set cindent
  set expandtab
  set shiftwidth=4
  set softtabstop=4
  set tabstop=4
  set formatoptions=croq
  set cinoptions=>4,:4,=4,b1,g0,h4,i4,(0,W4
endfunction
" }}}
" {{{ My68kAsmSetup()
function My68kAsmSetup()
  set expandtab
  set shiftwidth=8
  set softtabstop=8
  set tabstop=8
  set nowrap
  set makeprg=68kasm\ -l\ %
endfunction 
" }}}
" {{{ SetFileEncodings
function! SetFileEncodings(encodings)
  let b:myfileencodingsbak=&fileencodings
  let &fileencodings=a:encodings
endfunction
" }}}
" {{{ RestoreFileEncodings()
function! RestoreFileEncodings()
  let &fileencodings=b:myfileencodingsbak
  unlet b:myfileencodingsbak
endfunction
" }}}
